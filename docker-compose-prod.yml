services:
#  tempo:
#    image: grafana/tempo:2.2.2
#    command: [ "-config.file=/etc/tempo.yaml" ]
#    volumes:
#      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
#      - ./docker/tempo/tempo-data:/tmp/tempo
#    ports:
#      - "3110:3100"  # Tempo
#      - "9411:9411" # zipkin
#
#  loki:
#    image: grafana/loki:main
#    command: [ "-config.file=/etc/loki/local-config.yaml" ]
#    ports:
#      - "3100:3100"
#
#  prometheus:
#    image: prom/prometheus:v2.46.0
#    command:
#      - --enable-feature=exemplar-storage
#      - --config.file=/etc/prometheus/prometheus.yml
#    volumes:
#      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
#    ports:
#      - "9090:9090"
#
#  grafana:
#    image: grafana/grafana:10.1.0
#    volumes:
#      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
#    environment:
#      - GF_AUTH_ANONYMOUS_ENABLED=true # no auth for demo
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#      - GF_AUTH_DISABLE_LOGIN_FORM=true
#    ports:
#      - "3000:3000"

  message-handler:
    container_name: message-handler
    build:
      context: message-handler
      dockerfile: Dockerfile
    image: message-handler:latest
    ports:
      - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=prod
#    depends_on:
#      - tempo
#      - loki
#      - prometheus
#      - grafana
    networks:
      - spring-cloud-network

  message-generator:
    container_name: message-generator
    build:
      context: message-generator
      dockerfile: Dockerfile
    image: message-generator:latest
    ports:
      - 8082:8082
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
#      - tempo
#      - loki
#      - prometheus
#      - grafana
      - message-handler
    networks:
      - spring-cloud-network
networks:
  spring-cloud-network:
    driver: bridge